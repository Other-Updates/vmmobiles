<?phpif (!defined('BASEPATH'))    exit('No direct script access allowed');/** * Users * * This model represents holiday . It operates the following tables: * public_holidays * * @package	Tank_auth * @author	Vathsala(http://konyukhov.com/soft/) */class Holidays_model extends CI_Model {    private $table_name = 'public_holidays';   // user accounts    function __construct() {        parent::__construct();        $ci = & get_instance();    }    /* Get all holidays */    function get_all_holidays() {        $this->db->select($this->table_name . '.*');        $this->db->select('GROUP_CONCAT(department) as departments ');        $this->db->select('GROUP_CONCAT(department.name) as department_names');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as from_date', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as to_date', FALSE);        $this->db->join('department', 'department.id=' . $this->table_name . '.department', 'left');        $this->db->group_by($this->table_name . '.reason');        $this->db->group_by($this->table_name . '.holiday_from');        $this->db->group_by($this->table_name . '.holiday_to');        $query = $this->db->get($this->table_name);        if ($query->num_rows >= 1)            return $query->result_array();        return FALSE;    }    public function search_job($search) {        $dept_id = trim($search['dept_id']);        $from_date = trim($search['from_date']);        print_r($from_date);        exit;        $to_date = trim($search['to_date']);        if (isset($from_date) && !empty($from_date) && isset($to_date) && !empty($to_date)) {            $this->db->where($this->department . '.name >=', $from_date);            $this->db->where($this->department . '.name <=', $to_date);        }        if (isset($dept_id) && !empty($dept_id)) {            $this->db->like($this->department . '.name', $dept_id);        }        $this->db->select($this->department . '.*');        $this->db->where($this->department . '.status', 1);        $query = $this->db->get($this->department)->result_array();//        echo $this->db->last_query();        return $query;    }    function get_all_holidays_unique($dept_id) {        $this->db->select($this->table_name . '.*');        //$this->db->select('GROUP_CONCAT(department) as departments ');        //$this->db->select('GROUP_CONCAT(department.name) as department_names');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as from_date', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as to_date', FALSE);        //$this->db->join('department','department.id='.$this->table_name.'.department','left');        $this->db->where('department', $dept_id);        $this->db->group_by($this->table_name . '.reason');        $this->db->group_by($this->table_name . '.holiday_from');        $this->db->group_by($this->table_name . '.holiday_to');        $query = $this->db->get($this->table_name);        if ($query->num_rows >= 1)            return $query->result_array();        return FALSE;    }    /* Get all holidays for department */    function get_all_holidays_for_dept($dept_id) {        $this->db->select($this->table_name . '.*');        $this->db->where('department', $dept_id);        $query = $this->db->get($this->table_name);        if ($query->num_rows >= 1) {            return $query->result_array();        }        return false;    }    function get_all_holidays_except($id) {        $this->db->select($this->table_name . '.*');        $this->db->select('GROUP_CONCAT(department) as departments ');        $this->db->select('GROUP_CONCAT(department.name) as department_names');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as from_date', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as to_date', FALSE);        if (gettype($id) == "array") {            $this->db->where_not_in($this->table_name . '.id', $id);        } else {            $this->db->where($this->table_name . '.id !=', $id);        }        $this->db->join('department', 'department.id=' . $this->table_name . '.department', 'left');        $this->db->group_by($this->table_name . '.reason');        $this->db->group_by($this->table_name . '.holiday_from');        $this->db->group_by($this->table_name . '.holiday_to');        $query = $this->db->get($this->table_name);        if ($query->num_rows >= 1)            return $query->result_array();        return FALSE;    }    /* Get all holidays by limit */    function get_all_holidays_by_limit($limit = null, $start = null, $filter = null, $dept_id = null) {        $this->db->limit($limit, $start);        $this->db->select($this->table_name . '.*');        $this->db->select('GROUP_CONCAT(department) as departments ');        $this->db->select('GROUP_CONCAT(department.name) as department_names');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as from_date', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as to_date', FALSE);        if (isset($filter["sort"]) && !empty($filter["sort"])) {            $this->db->order_by($filter["sort"], $filter["order"]);        }        if (isset($filter["dept_id"]) && !empty($filter["dept_id"])) {            $this->db->where('department', $filter["dept_id"]);        }        if (isset($dept_id) && $dept_id != "") {            $this->db->where('department', $dept_id);        }        if (isset($filter["department"]) && !empty($filter["department"])) {            $this->db->where_in('department', $filter["department"]);        }        if (isset($filter["start_date"]) && $filter["start_date"] != "" && isset($filter["end_date"]) && $filter["end_date"] != "") {            $this->db->where('DATE(holiday_from)>=', date('Y-m-d', strtotime($filter["start_date"])));            $this->db->where('DATE(holiday_to)<=', date('Y-m-d', strtotime($filter["end_date"])));        } else if (isset($filter["start_date"]) && $filter["start_date"] != "") {            $this->db->where('DATE(holiday_from)>=', date('Y-m-d', strtotime($filter["start_date"])));        } else if (isset($filter["end_date"]) && $filter["end_date"] != "") {            $this->db->where('DATE(holiday_to)<=', date('Y-m-d', strtotime($filter["end_date"])));        }        $this->db->order_by("holiday_from", "desc");        $this->db->join('department', 'department.id=' . $this->table_name . '.department', 'left');        $this->db->group_by($this->table_name . '.reason');        $this->db->group_by($this->table_name . '.holiday_from');        $this->db->group_by($this->table_name . '.holiday_to');        $query = $this->db->get($this->table_name);        if ($query->num_rows >= 1)            return $query->result_array();        return FALSE;    }    /* Get IP details by id */    function get_holiday_details_by_id($id) {        $this->db->select($this->table_name . '.*');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as from_date', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as to_date', FALSE);        $this->db->where($this->table_name . '.id', $id);        $query = $this->db->get($this->table_name);        if ($query->num_rows >= 1)            return $query->result_array();        return FALSE;    }    /* Insert new holiday */    function insert_holiday($data) {        $this->db->order_by('id',"desc");        $datas=$this->db->get($this->table_name)->result_array();        if($datas!="")            $id=$datas[0]['id']+1;        else            $id=1;        $data['id']=$id;        if ($this->db->insert($this->table_name, $data)) {            return $this->db->insert_id();        }        return false;    }    /* Update holidays by id */    function update_holiday_by_id($id, $data) {        $this->db->where('id', $id);        if ($this->db->update($this->table_name, $data)) {            return true;        }        return false;    }    /* Delete ip by Id */    function delete_holiday_by_id($id) {        $this->db->where('id', $id);        $this->db->delete($this->table_name);        if ($this->db->affected_rows() > 0) {            return TRUE;        }        return FALSE;    }    /**     * Get Holiday count */    function get_holidays_count($filter = null) {        //$this->pre_print->viewExit($filter);        $this->db->select('count(*) as count');        if (isset($filter["dept_id"]) && !empty($filter["dept_id"])) {            $this->db->where('department', $filter["dept_id"]);        }        if (isset($filter["department"]) && !empty($filter["department"])) {            $this->db->where_in('department', $filter["department"]);        }        if (isset($filter["start_date"]) && $filter["start_date"] != "" && isset($filter["end_date"]) && $filter["end_date"] != "") {            $this->db->where('DATE(holiday_from)>=', date('Y-m-d', strtotime($filter["start_date"])));            $this->db->where('DATE(holiday_to)<=', date('Y-m-d', strtotime($filter["end_date"])));        } else if (isset($filter["start_date"]) && $filter["start_date"] != "") {            $this->db->where('DATE(holiday_from)>=', date('Y-m-d', strtotime($filter["start_date"])));        } else if (isset($filter["end_date"]) && $filter["end_date"] != "") {            $this->db->where('DATE(holiday_to)<=', date('Y-m-d', strtotime($filter["end_date"])));        }        $this->db->group_by($this->table_name . '.reason');        $this->db->group_by($this->table_name . '.holiday_from');        $this->db->group_by($this->table_name . '.holiday_to');        $query = $this->db->get($this->table_name);        //$this->pre_print->viewExit($query->result_array());        if ($query->num_rows() >= 1) {            return $query->result_array();        }        return false;    }    function get_group_holidays($holiday) {        $this->db->select($this->table_name . '.*');        $this->db->select('department.name');        $this->db->where('reason', $holiday[0]['reason']);        $this->db->where('holiday_from', $holiday[0]['holiday_from']);        $this->db->where('holiday_to', $holiday[0]['holiday_to']);        $this->db->join('department', 'department.id=' . $this->table_name . '.department', 'left');        $query = $this->db->get($this->table_name);        if ($query->num_rows() >= 1) {            return $query->result_array();        }        return false;    }    //Holidays by month and year and department    function get_holidays_by_department_month_and_year($year, $month, $dept) {        $this->db->select('*');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as h_from', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as h_to', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d") as from_key', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d") as to_key', FALSE);        $this->db->where('YEAR(holiday_from)', $year);        if (gettype($month) == "array")            $this->db->where_in('MONTH(holiday_from)', $month);        else            $this->db->where('MONTH(holiday_from)', $month);        $this->db->where('department', $dept);        $query = $this->db->get($this->table_name);        //echo $this->db->last_query();        if ($query->num_rows() >= 1) {            return $query->result_array();        }        return false;    }    function get_holidays_by_department_id($date, $dept) {        $this->db->select('*');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as h_from', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as h_to', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d") as from_key', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d") as to_key', FALSE);        $this->db->where('DATE(holiday_from)', $date);        //$this->db->where('DATE(holiday_to) <=',$date);        $this->db->where('department', $dept);        $query = $this->db->get($this->table_name);        //echo $this->db->last_query();        if ($query->num_rows() >= 1) {            return $query->result_array();        }        return false;    }    function get_holidays_by_between_dates($user_id, $date1, $date2, $dept) {        $this->db->select('*');        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d-%m-%Y") as h_from', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d-%m-%Y") as h_to', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_from,"%d") as from_key', FALSE);        $this->db->select('DATE_FORMAT(' . $this->table_name . '.holiday_to,"%d") as to_key', FALSE);        $this->db->where('DATE(holiday_from) >=', $date1);        $this->db->where('DATE(holiday_from) <=', $date2);        $this->db->where('department', $dept);        $query = $this->db->get($this->table_name);        //echo $this->db->last_query();        if ($query->num_rows() >= 1) {            return $query->result_array();        }        return false;    }}/* End of file whitelist_ip_model.php */